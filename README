# To configure the SugarCRM over the Docker env

In order to create local development environment do next:

1. Install Docker 1.12 or later

2. Clone this repo

3. Run
docker-compose up
from root folder created when the repo is cloned,
and wait for images to be pulled and containers to be created

4. Apache server should already listed on port 80, so you can access your website via
http://localhost/test.php
Changes you make in the source are immediately visible.

5. Now copy sugarcrm code inside www folder. My suggestion is to create separate folder
called crm inside www folder, so you can have more then one instance of sugarcrms
using same docker container.


6. Open http://localhost in browser and start installation.
For Mysql enter next credentials:
host: mysql_crm (yes, host is mysql_crm, it is resolved by docker - check docker-compose.yml)
db: sugarcrm
user: sugarcrm
pass:sugarcrm

root user: root
root password: sugarcrm

For Elastic search:
host: elasticsearch_crm (yes, this is host, again check docker-compose.yml)
port: 9200

7. Complete installation.

If you need to access mysql, you can connect to it using ip address from 6.
At some point we can add phpmyadmin software, but it is not needed for now.

In case you need to access any containers:
docker ps - This will list you all containers with their ids

In command below replace container_id with container id you want to connect
to based on results of previous step
docker exec -i -t container_id /bin/bash


** To set cronjob, add next line:
* * * * * cd /app/www/crm; /usr/local/bin/php -f cron.php > /dev/null 2>&1
And start cron service:
service cron start
Note that if you shutdown and remove container, you will need to set cronjob again for other instances.






